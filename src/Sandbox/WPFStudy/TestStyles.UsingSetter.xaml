<Window 
    x:Class="WPFStudy.TestStyles.UsingSetter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WPFStudy.TestStyles">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="buttonStyle">
                    <Setter Property="Button.FontSize" Value="22"/>
                    <Setter Property="Button.Background" Value="Purple"/>
                    <Setter Property="Button.Foreground" Value="White"/>
                    <Setter Property="Button.Height" Value="50"/>
                    <Setter Property="Button.Width" Value="50"/>
                    <Setter Property="Button.RenderTransformOrigin" Value=".5,.5"/>
                    <Setter Property="Button.RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="buttonStyleWithBold" BasedOn="{StaticResource buttonStyle}">
                    <!-- The seven properties set by buttonStyle are inherited -->
                    <Setter Property="Button.FontWeight" Value="Bold"/>
                </Style>
            </StackPanel.Resources>
            <Button Style="{StaticResource buttonStyle}">1</Button>
            <Button Style="{StaticResource buttonStyle}">2</Button>
            <Button Style="{StaticResource buttonStyleWithBold}">3</Button>
        </StackPanel>

        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="controlStyle">
                    <Setter Property="Control.FontSize" Value="22"/>
                    <Setter Property="Control.Background" Value="Purple"/>
                    <Setter Property="Control.Foreground" Value="White"/>
                    <Setter Property="Control.Height" Value="50"/>
                    <Setter Property="Control.Width" Value="50"/>
                    <Setter Property="Control.RenderTransformOrigin" Value=".5,.5"/>
                    <Setter Property="Control.RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>
            <Button Style="{StaticResource controlStyle}">1</Button>
            <ComboBox Style="{StaticResource controlStyle}">
                <ComboBox.Items>2</ComboBox.Items>
            </ComboBox>
            <Expander Style="{StaticResource controlStyle}" Content="3"/>
            <TabControl Style="{StaticResource controlStyle}">
                <TabControl.Items>4</TabControl.Items>
            </TabControl>
            <ToolBar Style="{StaticResource controlStyle}">
                <ToolBar.Items>5</ToolBar.Items>
            </ToolBar>
            <InkCanvas Style="{StaticResource controlStyle}"/>
            <TextBox Style="{StaticResource controlStyle}" Text="7"/>
        </StackPanel>

        <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
                    <Setter Property="FontSize" Value="22"/>
                    <Setter Property="Background" Value="Purple"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Width" Value="50"/>
                    <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="buttonStyleWithBold" BasedOn="{StaticResource buttonStyle}" TargetType="{x:Type Button}">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </StackPanel.Resources>
            <Button Style="{StaticResource buttonStyle}">1</Button>
            <Button Style="{StaticResource buttonStyle}">2</Button>
            <Button Style="{StaticResource buttonStyleWithBold}">3</Button>
        </StackPanel>

        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="10"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="FontSize" Value="22"/>
                    <Setter Property="Background" Value="Purple"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Width" Value="50"/>
                    <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
                </Style>
            </StackPanel.Resources>
            <Button Style="{StaticResource buttonStyle}">1</Button>
            <Button Style="{StaticResource buttonStyle}">2</Button>
            <Button Style="{StaticResource buttonStyle}">3</Button>
        </StackPanel>
        
        <StackPanel Grid.Column="1" Grid.RowSpan="4">
            <StackPanel.Resources>
                <Style x:Key="AlternatingRowStyle" TargetType="{x:Type Control}">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <ListBox AlternationCount="2" Margin="10" Width="200" 
                     ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                <ListBoxItem>Item 1</ListBoxItem>
                <ListBoxItem>Item 2</ListBoxItem>
                <ListBoxItem>Item 3</ListBoxItem>
                <ListBoxItem>Item 4</ListBoxItem>
                <ListBoxItem>Item 5</ListBoxItem>
            </ListBox>
            <TreeView AlternationCount="2" Margin="10" Width="200" 
                      ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                <TreeViewItem Header="Root 1" AlternationCount="2" 
                              ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                    <TreeViewItem Header="Subitem 1"/>
                    <TreeViewItem Header="Subitem 2"/>
                    <TreeViewItem Header="Subitem 3"/>
                </TreeViewItem>
                <TreeViewItem 
                    Header="Root 2" AlternationCount="2" 
                    ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                    <TreeViewItem Header="Subitem 1"/>
                    <TreeViewItem Header="Subitem 2"/>
                    <TreeViewItem Header="Subitem 3"/>
                </TreeViewItem>
            </TreeView>
        </StackPanel>

        <StackPanel Grid.Column="2" Grid.RowSpan="4" Width="200">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <DataTrigger 
                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" 
                            Value="disabled">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Background" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                </Style>
            </StackPanel.Resources>
            <TextBox Margin="3" Text="yellow"/>
            <TextBox Margin="3" Text="limegreen"/>
            <TextBox Margin="3" Text="not a color"/>
            <TextBox Margin="3" Text="disabled"/>
        </StackPanel>

    </Grid>
</Window>
